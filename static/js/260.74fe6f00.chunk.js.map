{"version":3,"file":"static/js/260.74fe6f00.chunk.js","mappings":"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","sources":["components/CodeArt/CodeArt.tsx","../node_modules/react-intersection-observer/src/observe.ts","../node_modules/react-intersection-observer/src/InView.tsx","../node_modules/react-intersection-observer/src/useInView.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'react-intersection-observer';\n\nconst SystemsSection = styled.section`\n  min-height: 100vh;\n  padding: 4rem 2rem;\n  background: ${props => props.theme.backgroundSecondary};\n`;\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nconst Title = styled(motion.h2)`\n  font-size: clamp(2rem, 5vw, 3rem);\n  margin-bottom: 4rem;\n  text-align: center;\n  background: ${props => props.theme.primaryGradient};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  \n  @media (max-width: 768px) {\n    margin-bottom: 2rem;\n  }\n`;\n\nconst SystemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst CollaborationPanel = styled(motion.div)`\n  background: #1a1f36;\n  border-radius: 15px;\n  padding: 1rem;\n  border: 1px solid ${props => props.theme.border};\n  box-shadow: ${props => props.theme.cardShadow};\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst EditorHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0.5rem 1rem;\n  border-bottom: 1px solid ${props => props.theme.border};\n  margin-bottom: 1rem;\n`;\n\nconst EditorDot = styled.div<{ color: string }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: ${props => props.color};\n`;\n\nconst CollaboratorsList = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n`;\n\nconst Collaborator = styled.div<{ color: string }>`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: ${props => props.color};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.7rem;\n  font-weight: bold;\n  color: white;\n`;\n\nconst CodeEditor = styled.div`\n  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;\n  font-size: 0.85rem;\n  line-height: 1.6;\n  color: #e2e8f0;\n  padding: 1rem;\n  flex: 1;\n  overflow-y: auto;\n  position: relative;\n`;\n\nconst CodeLine = styled(motion.div).withConfig({\n  shouldForwardProp: (prop) => prop !== 'delay'\n})<{ delay: number }>`\n  margin-bottom: 0.4rem;\n  position: relative;\n  \n  .keyword { color: #667eea; }\n  .string { color: #f6ad55; }\n  .function { color: #4299e1; }\n  .comment { color: #a0aec0; font-style: italic; }\n  .number { color: #f093fb; }\n  .api { color: #48bb78; }\n  .method { color: #ed8936; }\n`;\n\nconst TypingCursor = styled(motion.span)<{ color: string }>`\n  display: inline-block;\n  width: 2px;\n  height: 1.2em;\n  background: ${props => props.color};\n  margin-left: 2px;\n  vertical-align: text-bottom;\n`;\n\nconst SystemsDiagram = styled(motion.div)`\n  background: ${props => props.theme.background};\n  border-radius: 15px;\n  padding: 2rem;\n  border: 1px solid ${props => props.theme.border};\n  box-shadow: ${props => props.theme.cardShadow};\n  height: 500px;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst ServiceNode = styled(motion.div)<{ x: number; y: number; color: string }>`\n  position: absolute;\n  left: ${props => props.x}%;\n  top: ${props => props.y}%;\n  width: 80px;\n  height: 80px;\n  background: ${props => props.color};\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  font-weight: bold;\n  font-size: 0.7rem;\n  text-align: center;\n  border: 2px solid rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  transform: translate(-50%, -50%);\n`;\n\nconst ConnectionSVG = styled(motion.svg)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 1;\n`;\n\nconst FlowDot = styled(motion.circle)`\n  fill: #667eea;\n  filter: drop-shadow(0 0 8px #667eea);\n`;\n\nconst StatusIndicator = styled(motion.div)<{ status: 'success' | 'warning' | 'error' }>`\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: ${props => \n    props.status === 'success' ? '#48bb78' :\n    props.status === 'warning' ? '#ed8936' : '#f56565'\n  };\n  box-shadow: 0 0 10px ${props => \n    props.status === 'success' ? '#48bb78' :\n    props.status === 'warning' ? '#ed8936' : '#f56565'\n  };\n`;\n\nconst SystemsInHarmony: React.FC = () => {\n  const { ref, inView } = useInView({\n    threshold: 0.1,\n    triggerOnce: true\n  });\n\n  const [currentLine, setCurrentLine] = useState(0);\n  const [activeServices, setActiveServices] = useState<string[]>([]);\n  const [typingUser, setTypingUser] = useState(0);\n  const [showDataFlow, setShowDataFlow] = useState(false);\n\n  const collaborators = useMemo(() => [\n    { name: 'Alex', color: '#667eea', initial: 'A' },\n    { name: 'Sam', color: '#f093fb', initial: 'S' },\n    { name: 'Jordan', color: '#48bb78', initial: 'J' }\n  ], []);\n\n  const codeLines = useMemo(() => [\n    '// Real-time collaboration system',\n    '<span class=\"comment\">// Alex is typing...</span>',\n    '<span class=\"keyword\">const</span> <span class=\"api\">websocket</span> = <span class=\"keyword\">new</span> <span class=\"function\">WebSocket</span>(<span class=\"string\">\"wss://api.example.com\"</span>);',\n    '',\n    '<span class=\"comment\">// Sam added API integration</span>',\n    '<span class=\"keyword\">const</span> <span class=\"function\">fetchUserData</span> = <span class=\"keyword\">async</span> (userId) => {',\n    '  <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> <span class=\"method\">fetch</span>(<span class=\"string\">`/api/users/${userId}`</span>);',\n    '  <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> response.<span class=\"method\">json</span>();',\n    '};',\n    '',\n    '<span class=\"comment\">// Jordan implementing error handling</span>',\n    '<span class=\"keyword\">const</span> <span class=\"function\">handleApiError</span> = (error) => {',\n    '  console.<span class=\"method\">error</span>(<span class=\"string\">\"API Error:\"</span>, error);',\n    '  <span class=\"comment\">// Retry logic with exponential backoff</span>',\n    '  <span class=\"function\">setTimeout</span>(() => <span class=\"function\">retryRequest</span>(), <span class=\"number\">1000</span>);',\n    '};',\n    '',\n    '<span class=\"comment\">// System integration complete! →</span>'\n  ], []);\n\n  const services = useMemo(() => [\n    { name: 'Frontend', x: 15, y: 20, color: '#667eea', status: 'success' as const },\n    { name: 'API Gateway', x: 35, y: 20, color: '#f093fb', status: 'success' as const },\n    { name: 'Backend Service', x: 55, y: 20, color: '#9f7aea', status: 'success' as const },\n    { name: 'Auth Service', x: 75, y: 20, color: '#48bb78', status: 'warning' as const },\n    { name: 'Database', x: 75, y: 65, color: '#ed8936', status: 'success' as const },\n    { name: 'Cache', x: 35, y: 65, color: '#f6ad55', status: 'success' as const }\n  ], []);\n\n  useEffect(() => {\n    if (!inView) return;\n\n    const interval = setInterval(() => {\n      if (currentLine < codeLines.length) {\n        setCurrentLine(prev => prev + 1);\n        setTypingUser(prev => (prev + 1) % collaborators.length);\n      }\n    }, 1200);\n\n    return () => clearInterval(interval);\n  }, [inView, currentLine, codeLines, collaborators.length]);\n\n  // Activate services progressively\n  useEffect(() => {\n    if (!inView) return;\n\n    const timers = services.map((_, index) => \n      setTimeout(() => {\n        setActiveServices(prev => [...prev, services[index].name]);\n      }, (index + 1) * 1000)\n    );\n\n    const dataFlowTimer = setTimeout(() => {\n      setShowDataFlow(true);\n    }, 3000);\n\n    return () => {\n      timers.forEach(clearTimeout);\n      clearTimeout(dataFlowTimer);\n    };\n  }, [inView, services]);\n\n  const flowSequence = useMemo(() => ({\n    step1: { from: services[0], to: services[1] }, // Frontend → API Gateway\n    step2: { from: services[1], to: services[2] }, // API Gateway → Backend Service\n    step3: { from: services[2], to: services[3] }, // Backend → Auth Service\n    step4: { from: services[3], to: services[2] }, // Auth → Backend (auth response)\n    step5: [\n      { from: services[2], to: services[4] }, // Backend → Database\n      { from: services[2], to: services[5] }  // Backend → Cache\n    ]\n  }), [services]);\n\n  return (\n    <SystemsSection id=\"code-art\" ref={ref}>\n      <Container>\n        <Title\n          initial={{ opacity: 0, y: 30 }}\n          animate={inView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.8 }}\n        >\n          Systems in Harmony\n        </Title>\n        \n        <SystemsContainer>\n          <CollaborationPanel\n            initial={{ opacity: 0, x: -50 }}\n            animate={inView ? { opacity: 1, x: 0 } : {}}\n            transition={{ duration: 0.8, delay: 0.3 }}\n          >\n            <EditorHeader>\n              <div style={{ display: 'flex', gap: '0.5rem', alignItems: 'center' }}>\n                <EditorDot color=\"#ff5f57\" />\n                <EditorDot color=\"#ffbd2e\" />\n                <EditorDot color=\"#28ca42\" />\n                <span style={{ marginLeft: '1rem', color: '#a0aec0', fontSize: '0.9rem' }}>\n                  real-time-collaboration.js\n                </span>\n              </div>\n              <CollaboratorsList>\n                {collaborators.map((collab, index) => (\n                  <Collaborator \n                    key={collab.name} \n                    color={collab.color}\n                    style={{ \n                      opacity: index <= typingUser ? 1 : 0.3,\n                      transform: index === typingUser ? 'scale(1.1)' : 'scale(1)',\n                      transition: 'all 0.3s ease'\n                    }}\n                  >\n                    {collab.initial}\n                  </Collaborator>\n                ))}\n              </CollaboratorsList>\n            </EditorHeader>\n            <CodeEditor>\n              {codeLines.slice(0, currentLine).map((line, index) => (\n                <CodeLine\n                  key={index}\n                  delay={index * 0.1}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ duration: 0.3, delay: index * 0.1 }}\n                >\n                  <span dangerouslySetInnerHTML={{ __html: line }} />\n                  {index === currentLine - 1 && (\n                    <TypingCursor\n                      color={collaborators[typingUser]?.color || '#667eea'}\n                      animate={{ opacity: [1, 0] }}\n                      transition={{ duration: 0.8, repeat: Infinity }}\n                    />\n                  )}\n                </CodeLine>\n              ))}\n            </CodeEditor>\n          </CollaborationPanel>\n\n          <SystemsDiagram\n            initial={{ opacity: 0, x: 50 }}\n            animate={inView ? { opacity: 1, x: 0 } : {}}\n            transition={{ duration: 0.8, delay: 0.5 }}\n          >\n            {/* Service Nodes */}\n            {services.map((service, index) => (\n              <ServiceNode\n                key={service.name}\n                x={service.x}\n                y={service.y}\n                color={service.color}\n                initial={{ scale: 0, opacity: 0 }}\n                animate={activeServices.includes(service.name) ? {\n                  scale: 1,\n                  opacity: 1\n                } : {}}\n                transition={{\n                  duration: 0.5,\n                  delay: index * 0.2\n                }}\n                whileHover={{ scale: 1.1 }}\n              >\n                {service.name}\n                <StatusIndicator\n                  status={service.status}\n                  animate={{\n                    scale: [1, 1.2, 1],\n                    opacity: [0.8, 1, 0.8]\n                  }}\n                  transition={{\n                    duration: 2,\n                    repeat: Infinity,\n                    ease: \"easeInOut\"\n                  }}\n                />\n              </ServiceNode>\n            ))}\n            \n            {/* Data Flow Dots */}\n            {showDataFlow && (\n              <ConnectionSVG\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ duration: 1, delay: 1 }}\n              >\n                {/* Step 1: Frontend → API Gateway */}\n                <FlowDot\n                  key=\"step1\"\n                  r=\"6\"\n                  initial={{ opacity: 0 }}\n                  animate={{\n                    opacity: [0, 1, 1, 0],\n                    cx: [`${flowSequence.step1.from.x}%`, `${flowSequence.step1.to.x}%`],\n                    cy: [`${flowSequence.step1.from.y}%`, `${flowSequence.step1.to.y}%`]\n                  }}\n                  transition={{\n                    duration: 8,\n                    repeat: Infinity,\n                    times: [0, 0.05, 0.15, 0.2],\n                    ease: \"easeInOut\"\n                  }}\n                />\n\n                {/* Step 2: API Gateway → Backend Service */}\n                <FlowDot\n                  key=\"step2\"\n                  r=\"5\"\n                  initial={{ opacity: 0 }}\n                  animate={{\n                    opacity: [0, 0, 1, 1, 0],\n                    cx: [`${flowSequence.step2.from.x}%`, `${flowSequence.step2.from.x}%`, `${flowSequence.step2.to.x}%`],\n                    cy: [`${flowSequence.step2.from.y}%`, `${flowSequence.step2.from.y}%`, `${flowSequence.step2.to.y}%`]\n                  }}\n                  transition={{\n                    duration: 8,\n                    repeat: Infinity,\n                    times: [0, 0.15, 0.2, 0.35, 0.4],\n                    ease: \"easeInOut\"\n                  }}\n                />\n\n                {/* Step 3: Backend → Auth Service */}\n                <FlowDot\n                  key=\"step3\"\n                  r=\"4\"\n                  initial={{ opacity: 0 }}\n                  animate={{\n                    opacity: [0, 0, 1, 1, 0],\n                    cx: [`${flowSequence.step3.from.x}%`, `${flowSequence.step3.from.x}%`, `${flowSequence.step3.to.x}%`],\n                    cy: [`${flowSequence.step3.from.y}%`, `${flowSequence.step3.from.y}%`, `${flowSequence.step3.to.y}%`]\n                  }}\n                  transition={{\n                    duration: 8,\n                    repeat: Infinity,\n                    times: [0, 0.35, 0.4, 0.55, 0.6],\n                    ease: \"easeInOut\"\n                  }}\n                />\n\n                {/* Step 4: Auth → Backend (response) */}\n                <FlowDot\n                  key=\"step4\"\n                  r=\"3\"\n                  initial={{ opacity: 0 }}\n                  animate={{\n                    opacity: [0, 0, 1, 1, 0],\n                    cx: [`${flowSequence.step4.from.x}%`, `${flowSequence.step4.from.x}%`, `${flowSequence.step4.to.x}%`],\n                    cy: [`${flowSequence.step4.from.y}%`, `${flowSequence.step4.from.y}%`, `${flowSequence.step4.to.y}%`]\n                  }}\n                  transition={{\n                    duration: 8,\n                    repeat: Infinity,\n                    times: [0, 0.55, 0.6, 0.7, 0.75],\n                    ease: \"easeInOut\"\n                  }}\n                />\n\n                {/* Step 5: Backend → Database & Cache (parallel) */}\n                {flowSequence.step5.map((flow, index) => {\n                  const x1 = `${flow.from.x}%`;\n                  const y1 = `${flow.from.y}%`;\n                  const x2 = `${flow.to.x}%`;\n                  const y2 = `${flow.to.y}%`;\n                  \n                  return (\n                    <FlowDot\n                      key={`step5-${index}`}\n                      r=\"4\"\n                      initial={{ opacity: 0 }}\n                      animate={{\n                        opacity: [0, 0, 1, 1, 0],\n                        cx: [x1, x1, x2],\n                        cy: [y1, y1, y2]\n                      }}\n                      transition={{\n                        duration: 8,\n                        repeat: Infinity,\n                        times: [0, 0.75, 0.8 + (index * 0.025), 0.9 + (index * 0.025), 0.95 + (index * 0.025)],\n                        ease: \"easeInOut\"\n                      }}\n                    />\n                  );\n                })}\n              </ConnectionSVG>\n            )}\n          </SystemsDiagram>\n        </SystemsContainer>\n      </Container>\n    </SystemsSection>\n  );\n};\n\nexport default SystemsInHarmony;","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>(onChange);\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element | undefined>(undefined);\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["SystemsSection","styled","section","props","theme","backgroundSecondary","Container","div","Title","motion","h2","primaryGradient","SystemsContainer","CollaborationPanel","border","cardShadow","EditorHeader","EditorDot","color","CollaboratorsList","Collaborator","CodeEditor","CodeLine","withConfig","shouldForwardProp","prop","TypingCursor","span","SystemsDiagram","background","ServiceNode","x","y","ConnectionSVG","svg","FlowDot","circle","StatusIndicator","status","SystemsInHarmony","ref","inView","useInView","threshold","triggerOnce","currentLine","setCurrentLine","useState","activeServices","setActiveServices","typingUser","setTypingUser","showDataFlow","setShowDataFlow","collaborators","useMemo","name","initial","codeLines","services","useEffect","interval","setInterval","length","prev","clearInterval","timers","map","_","index","setTimeout","dataFlowTimer","forEach","clearTimeout","flowSequence","step1","from","to","step2","step3","step4","step5","_jsx","id","children","_jsxs","opacity","animate","transition","duration","delay","style","display","gap","alignItems","marginLeft","fontSize","collab","transform","slice","line","_collaborators$typing","dangerouslySetInnerHTML","__html","repeat","Infinity","service","scale","includes","whileHover","ease","r","cx","cy","times","flow","x1","y1","x2","y2","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","root","has","set","toString","get","observe","element","callback","arguments","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","observer","elements","instance","thresholds","entries","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","rootMargin","skip","initialInView","onChange","setRef","React2","state","setState","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}