{"version":3,"file":"static/js/831.7ad147f4.chunk.js","mappings":"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","sources":["components/Header/Header.tsx","hooks/useScrollProgress.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useScrollProgress } from '../../hooks/useScrollProgress';\n\nconst HeaderContainer = styled(motion.header).withConfig({\n  shouldForwardProp: (prop) => prop !== 'isScrolled'\n})<{ isScrolled: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  padding: 1rem 2rem;\n  transition: all 0.3s ease;\n  backdrop-filter: ${props => props.isScrolled ? 'blur(20px)' : 'none'};\n  background: ${props => props.isScrolled ? props.theme.glassBg : 'transparent'};\n  border-bottom: ${props => props.isScrolled ? `1px solid ${props.theme.border}` : 'none'};\n`;\n\nconst Nav = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 1400px;\n  margin: 0 auto;\n`;\n\nconst Logo = styled(motion.div)`\n  font-size: 1.5rem;\n  font-weight: 700;\n  background: ${props => props.theme.primaryGradient};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  cursor: pointer;\n`;\n\nconst NavLinks = styled.div`\n  display: flex;\n  gap: 2rem;\n  \n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst NavLink = styled(motion.a)`\n  color: ${props => props.theme.text};\n  font-weight: 500;\n  position: relative;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -5px;\n    left: 0;\n    width: 0;\n    height: 2px;\n    background: ${props => props.theme.primary};\n    transition: width 0.3s ease;\n  }\n  \n  &:hover::after {\n    width: 100%;\n  }\n`;\n\nconst MobileMenuButton = styled(motion.button)`\n  display: none;\n  background: none;\n  color: ${props => props.theme.text};\n  font-size: 1.5rem;\n  \n  @media (max-width: 768px) {\n    display: block;\n  }\n`;\n\nconst MobileMenu = styled(motion.div)`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background: ${props => props.theme.glassBg};\n  backdrop-filter: blur(20px);\n  border-bottom: 1px solid ${props => props.theme.border};\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 2rem;\n  \n  @media (min-width: 769px) {\n    display: none;\n  }\n`;\n\nconst ProgressBar = styled(motion.div)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  height: 3px;\n  background: ${props => props.theme.primaryGradient};\n  border-radius: 0 2px 2px 0;\n`;\n\nconst Header: React.FC = () => {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const scrollProgress = useScrollProgress();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const navLinks = [\n    { href: '#hero', label: 'Home' },\n    { href: '#skills', label: 'Skills' },\n    { href: '#experience', label: 'Experience' },\n    { href: '#code-art', label: 'Art' },\n    { href: '#contact', label: 'Contact' }\n  ];\n\n  const scrollToSection = (href: string) => {\n    const element = document.querySelector(href);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  return (\n    <HeaderContainer\n      isScrolled={isScrolled}\n      initial={{ y: -100 }}\n      animate={{ y: 0 }}\n      transition={{ duration: 0.6 }}\n    >\n      <Nav>\n        <Logo\n          onClick={() => scrollToSection('#hero')}\n          whileHover={{ scale: 1.05 }}\n        >\n          AY\n        </Logo>\n        \n        <NavLinks>\n          {navLinks.map((link, index) => (\n            <NavLink\n              key={link.href}\n              href={link.href}\n              onClick={(e) => {\n                e.preventDefault();\n                scrollToSection(link.href);\n              }}\n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5, delay: index * 0.1 }}\n              whileHover={{ y: -2 }}\n            >\n              {link.label}\n            </NavLink>\n          ))}\n        </NavLinks>\n        \n        <MobileMenuButton\n          onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n          whileTap={{ scale: 0.95 }}\n        >\n          â˜°\n        </MobileMenuButton>\n      </Nav>\n      \n      <AnimatePresence>\n        {isMobileMenuOpen && (\n          <MobileMenu\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: 'auto' }}\n            exit={{ opacity: 0, height: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            {navLinks.map((link) => (\n              <NavLink\n                key={link.href}\n                href={link.href}\n                onClick={(e) => {\n                  e.preventDefault();\n                  scrollToSection(link.href);\n                }}\n              >\n                {link.label}\n              </NavLink>\n            ))}\n          </MobileMenu>\n        )}\n      </AnimatePresence>\n      \n      <ProgressBar\n        style={{ width: `${scrollProgress}%` }}\n        initial={{ width: 0 }}\n      />\n    </HeaderContainer>\n  );\n};\n\nexport default Header;","import { useState, useEffect } from 'react';\n\nexport const useScrollProgress = () => {\n  const [scrollProgress, setScrollProgress] = useState(0);\n\n  useEffect(() => {\n    const updateScrollProgress = () => {\n      const currentProgress = window.scrollY;\n      const scrollHeight = document.documentElement.scrollHeight - window.innerHeight;\n      const progress = (currentProgress / scrollHeight) * 100;\n      \n      setScrollProgress(Math.min(progress, 100));\n    };\n\n    window.addEventListener('scroll', updateScrollProgress);\n    updateScrollProgress();\n\n    return () => {\n      window.removeEventListener('scroll', updateScrollProgress);\n    };\n  }, []);\n\n  return scrollProgress;\n};"],"names":["HeaderContainer","styled","motion","header","withConfig","shouldForwardProp","prop","props","isScrolled","theme","glassBg","border","Nav","nav","Logo","div","primaryGradient","NavLinks","NavLink","a","text","primary","MobileMenuButton","button","MobileMenu","ProgressBar","Header","setIsScrolled","useState","isMobileMenuOpen","setIsMobileMenuOpen","scrollProgress","useScrollProgress","setScrollProgress","useEffect","updateScrollProgress","progress","window","scrollY","document","documentElement","scrollHeight","innerHeight","Math","min","addEventListener","removeEventListener","handleScroll","navLinks","href","label","scrollToSection","element","querySelector","scrollIntoView","behavior","_jsxs","initial","y","animate","transition","duration","children","_jsx","onClick","whileHover","scale","map","link","index","e","preventDefault","opacity","delay","whileTap","AnimatePresence","height","exit","style","width"],"sourceRoot":""}