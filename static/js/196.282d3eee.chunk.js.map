{"version":3,"file":"static/js/196.282d3eee.chunk.js","mappings":"8MAKA,MAAMA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAOC,IAAI;;;;;;;;;;;;;EAepCC,GAAeH,EAAAA,EAAAA,IAAOC,EAAAA,EAAOG,QAAQC,WAAW,CACpDC,kBAAoBC,GAAkB,WAATA,GACR;;;;gBAIPC,GAASA,EAAMC,MAAMC;qBAChBF,GAASA,EAAMC,MAAME;sBACpBH,GAASA,EAAMC,MAAMG;;;;;;gBAM3BJ,GAASA,EAAMC,MAAMI;;;;;;EAQ/BC,GAAcd,EAAAA,EAAAA,IAAOC,EAAAA,EAAOC,IAAI;;;;EAoCtC,EA9B8Ba,KAC5B,MAAM,MAAEN,EAAK,YAAEO,IAAgBC,EAAAA,EAAAA,KACzBC,EAAmB,SAAVT,EAEf,OACEU,EAAAA,EAAAA,KAACpB,EAAe,CACdqB,QAAS,CAAEC,QAAS,EAAGC,MAAO,GAAKC,EAAG,KACtCC,QAAS,CAAEH,QAAS,EAAGC,MAAO,EAAGC,EAAG,GACpCE,WAAY,CAAEC,SAAU,GAAKC,MAAO,KAAMC,UAE1CT,EAAAA,EAAAA,KAAChB,EAAY,CACXe,OAAQA,EACRW,QAASb,EACTc,WAAY,CAAER,MAAO,KACrBS,SAAU,CAAET,MAAO,KACnBG,WAAY,CAAEO,KAAM,SAAUC,UAAW,IAAKC,QAAS,IAAKN,UAE5DT,EAAAA,EAAAA,KAACL,EAAW,CAEVM,QAAS,CAAEe,QAAS,IAAKd,QAAS,GAClCG,QAAS,CAAEW,OAAQ,EAAGd,QAAS,GAC/BI,WAAY,CAAEC,SAAU,IAAME,SAE7BV,EAAS,SAAM,UALXT,O","sources":["components/ThemeToggle/ThemeToggle.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { useTheme } from '../../contexts/ThemeContext';\n\nconst ToggleContainer = styled(motion.div)`\n  position: fixed;\n  top: 50%;\n  right: 2rem;\n  transform: translateY(-50%);\n  z-index: 1000;\n  \n  @media (max-width: 768px) {\n    top: auto;\n    bottom: 2rem;\n    right: 1rem;\n    transform: none;\n  }\n`;\n\nconst ToggleButton = styled(motion.button).withConfig({\n  shouldForwardProp: (prop) => prop !== 'isDark'\n})<{ isDark: boolean }>`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  background: ${props => props.theme.glassBg};\n  backdrop-filter: ${props => props.theme.glassBackdrop};\n  border: 1px solid ${props => props.theme.border};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.5rem;\n  cursor: pointer;\n  box-shadow: ${props => props.theme.cardShadow};\n  \n  &:hover {\n    transform: scale(1.1);\n    box-shadow: 0 10px 40px rgba(102, 126, 234, 0.3);\n  }\n`;\n\nconst IconWrapper = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ThemeToggle: React.FC = () => {\n  const { theme, toggleTheme } = useTheme();\n  const isDark = theme === 'dark';\n\n  return (\n    <ToggleContainer\n      initial={{ opacity: 0, scale: 0.8, x: 100 }}\n      animate={{ opacity: 1, scale: 1, x: 0 }}\n      transition={{ duration: 0.8, delay: 1.5 }}\n    >\n      <ToggleButton\n        isDark={isDark}\n        onClick={toggleTheme}\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.95 }}\n        transition={{ type: 'spring', stiffness: 400, damping: 17 }}\n      >\n        <IconWrapper\n          key={theme}\n          initial={{ rotate: -180, opacity: 0 }}\n          animate={{ rotate: 0, opacity: 1 }}\n          transition={{ duration: 0.3 }}\n        >\n          {isDark ? '☽' : '☀'}\n        </IconWrapper>\n      </ToggleButton>\n    </ToggleContainer>\n  );\n};\n\nexport default ThemeToggle;"],"names":["ToggleContainer","styled","motion","div","ToggleButton","button","withConfig","shouldForwardProp","prop","props","theme","glassBg","glassBackdrop","border","cardShadow","IconWrapper","ThemeToggle","toggleTheme","useTheme","isDark","_jsx","initial","opacity","scale","x","animate","transition","duration","delay","children","onClick","whileHover","whileTap","type","stiffness","damping","rotate"],"sourceRoot":""}